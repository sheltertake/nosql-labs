version: "3.8"
services:
    db:
        image: mcr.microsoft.com/mssql/server:2017-latest
        container_name: contoso-sql-server
        environment:
          - SA_PASSWORD=Passw@rd
          - ACCEPT_EULA=Y 
        networks:
            - dbnet
        ports:
            - "1433:1433"

    mongo:
        image: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        ports:
            - 27017:27017

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example

    # mongo1:
    #     image: mongo:4.2
    #     container_name: mongo1
    #     command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001"]
    #     # volumes:
    #       # - ./data/mongo-1:/data/db
    #     ports:
    #       - 30001:30001    
    #     healthcheck:
    #         test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
    #         interval: 10s
    #         start_period: 30s
    
    # mongo2:
    #     image: mongo:4.2
    #     container_name: mongo2
    #     command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002"]
    #     # volumes:
    #       # - ./data/mongo-2:/data/db
    #     ports:
    #       - 30002:30002

    # mongo3:
    #     image: mongo:4.2
    #     container_name: mongo3
    #     command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003"]
    #     # volumes:
    #       # - ./data/mongo-3:/data/db
    #     ports:
    #       - 30003:30003
    



networks:
    dbnet:
        name: dbnet
    mongo:
        name: mongo
